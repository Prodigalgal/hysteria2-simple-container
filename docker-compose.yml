# hy2/docker-compose.yml (v4 - 应用伪装修复和性能优化)
services:
  traefik:
    image: traefik:v2.11
    container_name: traefik
    restart: unless-stopped
    ports:
      # 不再需要 80 端口，TLS-ALPN 挑战在 443 上完成
      - "443:443/tcp"
      - "443:443/udp"
    volumes:
      - ./letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - --log.level=INFO # 日志级别从 DEBUG 改为 INFO，减少不必要的日志输出
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.websecure.address=:443/tcp
      - --entrypoints.quic.address=:443/udp
      - --certificatesresolvers.le.acme.tlschallenge=true
      - --certificatesresolvers.le.acme.email=${LE_EMAIL}
      - --certificatesresolvers.le.acme.storage=/letsencrypt/acme.json
    env_file:
      - .env

  hysteria-server:
    build:
      context: .
      args:
        - HYSTERIA_VERSION=${HYSTERIA_VERSION}
        - HYSTERIA_ARCH_SUFFIX=${HYSTERIA_ARCH_SUFFIX}
    container_name: hysteria-server
    restart: unless-stopped
    depends_on:
      - traefik
    # 【优化】为Linux宿主机启用性能调优，如果您的环境不支持，请注释掉此部分
#    sysctls:
#      - net.core.rmem_max=26214400
#      - net.core.wmem_max=26214400
    labels:
      - "traefik.enable=true"
      # TCP 路由，用于处理浏览器等标准HTTPS流量的伪装
      - "traefik.tcp.routers.hysteria-tcp.rule=HostSNI(`${DOMAIN}`)"
      - "traefik.tcp.routers.hysteria-tcp.entrypoints=websecure"
#      - "traefik.tcp.routers.hysteria-tcp.tls.certresolver=le"
      - "traefik.tcp.routers.hysteria-tcp.tls.passthrough=true"
      - "traefik.tcp.services.hysteria-tcp.loadbalancer.server.port=4433" #【修复】将TCP流量转发到Hysteria的伪装端口
      # UDP 路由，用于处理Hysteria客户端的QUIC流量
      - "traefik.udp.routers.hysteria-udp.entrypoints=quic"
      - "traefik.udp.services.hysteria-udp.loadbalancer.server.port=443"
    volumes:
      - ./entrypoint.sh:/usr/local/bin/entrypoint.sh:ro
      - ./letsencrypt:/etc/hysteria/certs:ro
    env_file:
      - .env